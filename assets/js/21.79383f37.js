(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{387:function(e,n,t){"use strict";t.r(n);var a=t(17),i=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"configuration-of-venus-sector-manager"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration-of-venus-sector-manager"}},[e._v("#")]),e._v(" Configuration of venus-sector-manager")]),e._v(" "),t("p",[t("code",[e._v("venus-sector-manager")]),e._v(" is the main component for interacting with the chain and maintaining the sectors. Let's take a look at its configuration file structure.")]),e._v(" "),t("p",[e._v("After initialization, we can get a copy of the default configuration:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('# Default config:\n[Common]\n[Common.API]\n#Chain = "/ip4/{api_host}/tcp/{api_port}"\n#Messager = "/ip4/{api_host}/tcp/{api_port}"\n#Market = "/ip4/{api_host}/tcp/{api_port}"\n#Gateway = ["/ip4/{api_host}/tcp/{api_port}"]\n#Token = "{some token}"\n#ChainEventInterval = "1m0s"\n#\n[[Common.PieceStores]]\n#Name = "{store_name}"\n#Path = "{store_path}"\n#Plugin = "path/to/objstore-plugin"\n[Common.PieceStores.Meta]\n#SomeKey = "SomeValue"\n#\n[[Common.PersistStores]]\n#Name = "{store_name}"\n#Path = "{store_path}"\n#Strict = false\n#ReadOnly = false\n#Weight = 0\n#Plugin = "path/to/objstore-plugin"\n#AllowMiners = [1, 2]\n#DenyMiners = [3, 4]\n[Common.PersistStores.Meta]\n#SomeKey = "SomeValue"\n[Common.MongoKVStore]\n#Enable = false\n#DSN = "mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000"\n#DatabaseName = "test"\n#\n[[Miners]]\n#Actor = 10086\n[Miners.Sector]\n#InitNumber = 0\n#MinNumber = 10\n#MaxNumber = 1000000\n#Enabled = true\n#EnableDeals = false\n#LifetimeDays = 540\n#Verbose = false\n[Miners.SnapUp]\n#Enabled = false\n#Sender = "f1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n#SendFund = true\n#GasOverEstimation = 1.2\n#GasOverPremium = 0.0\n#GasFeeCap = "5 nanoFIL"\n#MaxFeeCap = ""\n#MessageConfidence = 15\n#ReleaseConfidence = 30\n[Miners.SnapUp.Retry]\n#MaxAttempts = 10\n#PollInterval = "3m0s"\n#APIFailureWait = "3m0s"\n#LocalFailureWait = "3m0s"\n[Miners.Commitment]\n#Confidence = 10\n[Miners.Commitment.Pre]\n#Sender = "f1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n#SendFund = true\n#GasOverEstimation = 1.2\n#GasOverPremium = 0.0\n#GasFeeCap = "5 nanoFIL"\n#MaxFeeCap = ""\n[Miners.Commitment.Pre.Batch]\n#Enabled = false\n#Threshold = 16\n#MaxWait = "1h0m0s"\n#CheckInterval = "1m0s"\n#GasOverEstimation = 1.2\n#GasOverPremium = 0.0\n#GasFeeCap = "5 nanoFIL"\n#MaxFeeCap = ""\n[Miners.Commitment.Prove]\n#Sender = "f1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n#SendFund = true\n#GasOverEstimation = 1.2\n#GasOverPremium = 0.0\n#GasFeeCap = "5 nanoFIL"\n#MaxFeeCap = ""\n[Miners.Commitment.Prove.Batch]\n#Enabled = false\n#Threshold = 16\n#MaxWait = "1h0m0s"\n#CheckInterval = "1m0s"\n#GasOverEstimation = 1.2\n#GasOverPremium = 0.0\n#GasFeeCap = "5 nanoFIL"\n#MaxFeeCap = ""\n[Miners.Commitment.Terminate]\n#Sender = "f1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n#SendFund = true\n#GasOverEstimation = 1.2\n#GasOverPremium = 0.0\n#GasFeeCap = "5 nanoFIL"\n#MaxFeeCap = ""\n[Miners.Commitment.Terminate.Batch]\n#Enabled = false\n#Threshold = 5\n#MaxWait = "1h0m0s"\n#CheckInterval = "1m0s"\n#GasOverEstimation = 1.2\n#GasOverPremium = 0.0\n#GasFeeCap = "5 nanoFIL"\n#MaxFeeCap = ""\n[Miners.PoSt]\n#Sender = "f1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n#Enabled = true\n#StrictCheck = true\n#Parallel = false\n#GasOverEstimation = 1.2\n#GasOverPremium = 0.0\n#GasFeeCap = "5 nanoFIL"\n#MaxFeeCap = ""\n#Confidence = 10\n#SubmitConfidence = 0\n#ChallengeConfidence = 0\n#MaxRecoverSectorLimit = 0\n#MaxPartitionsPerPoStMessage = 0\n#MaxPartitionsPerRecoveryMessage = 0\n[Miners.Proof]\n#Enabled = false\n[Miners.Sealing]\n#SealingEpochDuration = 0\n#\n')])])]),t("p",[e._v("We will break down each configurable item one by one.")]),e._v(" "),t("h2",{attrs:{id:"common"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#common"}},[e._v("#")]),e._v(" [Common]")]),e._v(" "),t("p",[t("code",[e._v("Common")]),e._v(" section includes common configuration, which is further divided into four sub-configuration items:")]),e._v(" "),t("h3",{attrs:{id:"common-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#common-api"}},[e._v("#")]),e._v(" [Common.API]")]),e._v(" "),t("p",[t("code",[e._v("Common.API")]),e._v(" is interface related configuration, its content includes:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[Common.API]\n# Chain service info, required, string type\n# Fill in according to the actual situation of the service used\n# If the field is valid as a token-included-info-string ("{token}:{multiaddr}"), the token included would be used to construct the rpc client instead of the common token.\nChain = "/ip4/{api_host}/tcp/{api_port}"\n\n# Message service info, required, string type\n# Fill in according to the actual situation of the service used\n# If the field is valid as a token-included-info-string ("{token}:{multiaddr}"), the token included would be used to construct the rpc client instead of the common token.\nMessager = "/ip4/{api_host}/tcp/{api_port}"\n\n# Market service info, required, string type\n# Fill in according to the actual situation of the service used\n# If the field is valid as a token-included-info-string ("{token}:{multiaddr}"), the token included would be used to construct the rpc client instead of the common token.\nMarket = "/ip4/{api_host}/tcp/{api_port}"\n\n# Event gateway service infos, required, string type\n# Fill in according to the actual situation of the service used\n# For each one contained, if the item is valid as a token-included-info-string ("{token}:{multiaddr}"), the token included would be used to construct the rpc client instead of the common token.\nGateway = ["/ip4/{api_host}/tcp/{api_port}"]\n\n# common token for services, required, string type\n# Fill in according to the actual situation of the service used\nToken = "{some token}"\n\n# Interval time for detecting chain height changes, optional, duration type\n# Default is 1min\n#ChainEventInterval = "1m0s"\n')])])]),t("h3",{attrs:{id:"common-piecestores"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#common-piecestores"}},[e._v("#")]),e._v(" [[Common.PieceStores]]")]),e._v(" "),t("p",[t("code",[e._v("Common.PieceStores")]),e._v(" is used for configuring local deal "),t("code",[e._v("piece")]),e._v(" data. When there is available offline deal, you can configure this item to avoid getting the deal "),t("code",[e._v("piece")]),e._v(" data through public network traffic.")]),e._v(" "),t("p",[e._v("Each local store directory should correspond to a "),t("code",[e._v("Common.PieceStores")]),e._v(" configuration block.")]),e._v(" "),t("h4",{attrs:{id:"basic-configuration-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basic-configuration-example"}},[e._v("#")]),e._v(" Basic configuration example")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[[Common.PieceStores]]\n# name, optional, string type\n# The default is the absolute path corresponding to the path\n#Name = "remote-store1"\n\n# path, required, string type\nPath = "/mnt/mass/piece1"\n\n# Plugin path, optional, string type\n# default is null\n# If you would like to use a custom storage scheme, you can write a golang plugin that meets the requirements and set it here.\n#Plugin = "path/to/objstore-plugin"\n\n# Meta information, optional items, dictionary type\n# The internal value is in the format of Key = "Value"\n# Default value is null\n# Used to support different types of storage schemes\n[Common.PieceStores.Meta]\n#SomeKey = "SomeValue"\n#\n')])])]),t("h3",{attrs:{id:"common-persiststores"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#common-persiststores"}},[e._v("#")]),e._v(" [[Common.PersistStores]]")]),e._v(" "),t("p",[t("code",[e._v("Common.PersistStores")]),e._v(" is used to configure sector persistent data stores. It corresponds to the "),t("code",[e._v("attached")]),e._v(" concept in "),t("code",[e._v("venus-worker")]),e._v(".")]),e._v(" "),t("p",[e._v("Similar to "),t("code",[e._v("Common.PieceStores")]),e._v(", each persistent store directory should correspond to a "),t("code",[e._v("Common.PersistStores")]),e._v(" configuration block.")]),e._v(" "),t("h4",{attrs:{id:"basic-configuration-example-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basic-configuration-example-2"}},[e._v("#")]),e._v(" Basic configuration example")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[[Common.PersistStores]]\n# name, optional, string type\n## Default is the absolute path corresponding to the path\n#Name = "remote-store1"\n\n# path, required, string type\n# It is recommended to use absolute paths\nPath = "/mnt/remote/10.0.0.14/store"\n\n# read only, optional, boolean\n# Default is false\n# From v0.4.0 and above, the persistent storage allocation logic goes to vsmgr\n# This configuration can be used to set whether you can continue to write to the storage\n#ReadOnly = false\n\n# weight, optional, number type\n# Default is 1\n# When the filled value is 0, it is equivalent to 1\n# From v0.4.0 and above, the persistent storage allocation logic goes to vsmgr\n# This configuration can be used to set the weight allocation ratio between multiple persistent stores\n#Weight = 1\n\n# Plugin path, optional, string type\n# default is null\n# If you want to use a custom storage scheme, you can write a golang plugin that meets the requirements and set it here.\n#Plugin = "path/to/objstore-plugin"\n\n# List of miner IDs that are allowed, optional, numeric array type\n# default is null\n# When not set, it is regarded as allowing all miner IDs; when set, it is equivalent to a whitelist, which allows only listed miner IDs\n# If a miner ID appears in AllowMiners and DenyMiners at the same time, DenyMiners will take effect first, which is considered blacklisted\n#AllowMiners = [1, 2]\n\n# List of miner IDs that are being denied, optional, numeric array type\n# default is null\n# When not set, it is regarded as not rejecting any miner number; when set, it is equivalent to a blacklist, which will deny the listed miner ID\n# If a miner ID appears in both AllowMiners and DenyMiners, DenyMiners will take effect first, which is considered blacklisted\n#DenyMiners = [3, 4]\n\n# Meta information, optional items, dictionary type\n# The internal value is in the format of Key = "Value"\n# Default value is null\n# Used to support the preparation of different types of storage schemes, currently has no effect\n[Common.PersistStores.Meta]\n#SomeKey = "SomeValue"\n#\n')])])]),t("h3",{attrs:{id:"common-mongokvstore"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#common-mongokvstore"}},[e._v("#")]),e._v(" [Common.MongoKVStore]")]),e._v(" "),t("p",[t("code",[e._v("Common.MongoKVStore")]),e._v(" is used to configure whether "),t("code",[e._v("venus-sector-manager")]),e._v(" use MongoDB as KV store during sealing。")]),e._v(" "),t("h4",{attrs:{id:"basic-configuration-example-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basic-configuration-example-3"}},[e._v("#")]),e._v(" Basic configuration example")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('# Switch of Mongo KV, optional, boolean type\n# default is false \nEnable = true\n# DSN of Mongo, when `Enable` is true, `DSN` is required, string type。\nDSN = "mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000"\n# DatabaseName of Mongo, when `Enable` is true, `DatabaseName` is required, string type。\nDatabaseName = "test"\n')])])]),t("h2",{attrs:{id:"miners"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#miners"}},[e._v("#")]),e._v(" [[Miners]]")]),e._v(" "),t("p",[t("code",[e._v("Miners")]),e._v(" is an important configuration item, which is used to define behavior and policy for a certain "),t("code",[e._v("SP")]),e._v(".")]),e._v(" "),t("p",[t("code",[e._v("venus-cluster")]),e._v(" is designed to support multiple "),t("code",[e._v("SP")]),e._v("s with the same set of components. This is reflected in "),t("code",[e._v("venus-sector-manager")]),e._v(", which you can set multiple "),t("code",[e._v("Miners")]),e._v(" configuration blocks as needed.")]),e._v(" "),t("h3",{attrs:{id:"main-configuration-item"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#main-configuration-item"}},[e._v("#")]),e._v(" Main configuration item")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[[Miners]]\n# `SP` actor id, required, numeric type\nActor = 10086\n")])])]),t("p",[e._v("In addition to the main configuration, "),t("code",[e._v("Miners")]),e._v(" also contains a number of different sub-configuration blocks, let's go through them one by one")]),e._v(" "),t("h3",{attrs:{id:"miners-sector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#miners-sector"}},[e._v("#")]),e._v(" [Miners.Sector]")]),e._v(" "),t("p",[e._v("Policy used to control sector allocation.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[Miners.Sector]\n# Sector start number, optional, number type\n# Default value is 0\n# Deprecated\nInitNumber = 0\n\n# Minimum sector number, optional, number type\n# Default value is null\n# Compared with InitNumber, when this is set,\n# 1. At any time, the allocator will not give a sector number less than or equal to this value.\n# 2. The value of this item can be adjusted during cluster operation.\n# Increase the config value, the assignment result will always follow the description of 1).\n# Lowering the config value usually has no effect.\n#\n# When this item is not set, if InitNumber is a non-zero value, it is equivalent to this item.\n#MinNumber = 10\n\n# Sector number upper limit, optional, number type\n# The default value is null, which means no upper limit\n#MaxNumber = 1000000\n\n# Whether to allow allocation of sectors, optional, boolean type\n# The default value is true, that is, the allocation is enabled\n#Enabled = true\n\n# Whether to allow allocation of deals, optional, boolean\n# Default is false\n#EnableDeals = false\n\n# The life cycle of the CC sector, the unit is days, optional, number type\n# Default is 540\n#LifetimeDays = 540\n\n# Sector log verbosity of related modules, optional items, boolean type\n# The default value is false, which simplifies the log output\n#Verbose = false\n")])])]),t("h3",{attrs:{id:"miners-snapup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#miners-snapup"}},[e._v("#")]),e._v(" [Miners.SnapUp]")]),e._v(" "),t("p",[e._v("Production strategy for controlling "),t("code",[e._v("SnapDeal")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[Miners.SnapUp]\n# Whether to enable, optional, boolean type\n# Default is false\n#Enabled = false\n\n# Sender address, required if enabled, address type\n#Sender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n# Whether to send the necessary funds from Sender when submitting the on-chain message, optional, boolean type\n# Default value is true\n#SendFund = true\n\n# Gas estimate multiplier for a single commit message, optional, floating point type\n# Default is 1.2\n#GasOverEstimation = 1.2\n\n# Gas premium multiplier for a single commit message, optional, floating point type\n# Default is 0.0, which means no effect\n#GasOverPremium = 0.0\n\n# FeeCap limit for a single message, optional, FIL value type\n# Default is 5 nanoFIL\n#GasFeeCap = "5 nanoFIL"\n\n# Deprecated\n#MaxFeeCap = ""\n\n# The confident height for message on-chain, optional, number type\n# Default is 15\n#MessageConfidence = 15\n\n# The confident height to release old data storage space, optional, number type\n# Default is 30\n#ReleaseConfidence = 30\n\n# SnapUp retry policy\n[Miners.SnapUp.Retry]\n\n# maximum number of retries, optional, number type\n# The default is NULL, which means no limit\n#MaxAttempts = 10\n\n# Status polling interval, optional, duration type\n# Default is 3min\n#PollInterval = "3m0s"\n\n# API interface exception retry interval, optional, duration type\n# Default is 3min\n#APIFailureWait = "3m0s"\n\n# Retry interval for local exceptions, such as local database exceptions, local storage exceptions, etc., optional, duration type\n# Default is 3min\n#LocalFailureWait = "3m0s"\n')])])]),t("h3",{attrs:{id:"miners-commitment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment"}},[e._v("#")]),e._v(" [Miners.Commitment]")]),e._v(" "),t("p",[e._v("Common section for configuring PoRep message sending policies.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[Miners.Commitment]\n# Height of the message that is considered stable, optional, number type\n# Default is 10\n#Confidence = 10\n")])])]),t("h3",{attrs:{id:"miners-commitment-pre"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment-pre"}},[e._v("#")]),e._v(" [Miners.Commitment.Pre]")]),e._v(" "),t("p",[e._v("Strategy for configuring "),t("code",[e._v("PreCommit")]),e._v(" message sending")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[Miners.Commitment.Pre]\n# Whether to use the necessary funds from Sender when sending the  message on-chain, optional, boolean type\n# Default value is true\n#SendFund = true\n\n# Sender address, required, address type\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n# Gas estimate multiplier for a single message, optional, floating point type\n# Default is 1.2\n#GasOverEstimation = 1.2\n\n# Gas premium multiplier for a single commit message, optional, floating point type\n# Default is 0.0, which means no effect\n#GasOverPremium = 0.0\n\n# FeeCap limit for a single message, optional, FIL value type\n# Default is 5 nanoFIL\n#GasFeeCap = "5 nanoFIL"\n\n# Deprecated\n#MaxFeeCap = "5 nanoFIL"\n\n# Aggregate message sending configuration blocks\n[Miners.Commitment.Pre.Batch]\n# Whether to enable aggregate messages, optional, boolean type\n# The default value is false, i.e. not enabled\n#Enabled = false\n\n# Minimum number of message to aggregate, optional, number type\n# The default value is 16, that is, the minimum number of aggregates is 16\n#Threshold = 16\n\n# Maximum waiting time, optional, time type\n# The default value is 1h, that is, the maximum wait time is 1 hour\n#MaxWait = "1h0m0s"\n\n# Check interval, optional, time type\n# The default value is 1min, that is, every 1min to check whether the aggregation conditions are met\n#CheckInterval = "1m0s"\n\n# Gas estimation multiplier of aggregate messages, optional, floating point type\n# Default is 1.2\n#GasOverEstimation = 1.2\n\n# Gas premium multiplier for a single commit message, optional, floating point type\n# Default is 0.0, which means no effect\n#GasOverPremium = 0.0\n\n# FeeCap limit for a single message, optional, FIL value type\n# Default is 5 nanoFIL\n#GasFeeCap = "5 nanoFIL"\n\n# Deprecated\n#MaxFeeCap = "5 nanoFIL"\n')])])]),t("h3",{attrs:{id:"miners-commitment-prove"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment-prove"}},[e._v("#")]),e._v(" [Miners.Commitment.Prove]")]),e._v(" "),t("p",[e._v("The strategy used to configure "),t("code",[e._v("ProveCommit")]),e._v(" message sending, its configuration items and functions are exactly the same as those in "),t("code",[e._v("Miners.Commitment.Pre")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"miners-commitment-terminate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment-terminate"}},[e._v("#")]),e._v(" [Miners.Commitment.Terminate]")]),e._v(" "),t("p",[e._v("The strategy used to configure "),t("code",[e._v("TerminateSectors")]),e._v(" message submission, its configuration items and functions are basically the same as those in "),t("code",[e._v("Miners.Commitment.Pre")]),e._v(". In practice, such messages are not sent as frequently. It is recommended to use single message sending mode. When using aggregate sending mode, "),t("code",[e._v("Threshold")]),e._v(" is recommended to be configured with a smaller value to ensure that messages get on-chain in time.")]),e._v(" "),t("h3",{attrs:{id:"miners-post"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#miners-post"}},[e._v("#")]),e._v(" [Miners.PoSt]")]),e._v(" "),t("p",[e._v("Options for configuring "),t("code",[e._v("WindowPoSt")]),e._v(".")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[Miners.Post]\n# Sender address, required, address type\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n# Whether to enable, optional, boolean type\n# Default value is true\n#Enabled = true\n\n# Whether to perform strong verification on sector files, optional, boolean type\n# Default value is true\n# When enabled, in addition to checking the existence of the file, it will also try to read some information, such as metadata, etc.\n#StrictCheck = true\n\n# Switch for enable parallel proofs generations, optional, boolean type\n# Default value is false\n# When enabled, we will start generating partitions inside one deadline parallelly\n# BE NOTICED: this can take effect only when multiple ext-provers are set\n#Parallel = false\n\n# Gas estimation multiplier of WindowPoSt message, optional, floating point type\n# Default is 1.2\n#GasOverEstimation = 1.2\n\n# Gas premium multiplier for a single commit message, optional, floating point type\n# Default is 0.0, which means no effect\n#GasOverPremium = 0.0\n\n# FeeCap limit for a single message, optional, FIL value type\n# Default is 5 nanoFIL\n#GasFeeCap = "5 nanoFIL"\n\n# Deprecated\n#MaxFeeCap = "5 nanoFIL"\n\n# Height of the message that is considered stable, optional, number type\n# Default is 10\n#Confidence = 10\n\n# Stable height to submit WindowPoSt proofs, optional, number type\n# This value determines how many epochs to wait for the chain to enter a stable state, so that we could start submiting proofs\n# The first epoch we can submit is deadline.Open + SubmitConfidence\n# The smaller this value is set, the earlier it will start, but at the same time, more likely to send windowPost to a fork\n# When set to 0, the default value of 4 will be used\n#SubmitConfidence = 0\n\n# Stable height to start WindowPoSt, optional, number type\n# This value determines how many epochs to wait for the chain to enter a stable state, and the WindowPoSt task can be started\n# The first epoch we can start is deadline.Challenge + ChallengeConfidence\n# The smaller this value is set, the earlier it will start, but at the same time, more likely to send windowPost to a fork\n# When set to 0, the default value of 10 will be used\n#ChallengeConfidence = 0\n\n# The maximum limit of the sectors included in one recovering check, optional, number type\n# Default value is 0\n# When set to 0, no limit\n#MaxRecoverSectorLimit = 0\n\n# The maximum number of Partitions allowed in a single PoSt message, optional, number type\n# Default value is 0\n# When set to 0, the default maximum value will be used\n#MaxPartitionsPerPoStMessage = 0\n\n# The maximum number of Partitions allowed in a single Recover message, optional, number type\n# Default value is 0\n# When set to 0, no limit\n#MaxPartitionsPerRecoveryMessage = 0\n')])])]),t("h3",{attrs:{id:"miners-proof"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#miners-proof"}},[e._v("#")]),e._v(" [Miners.Proof]")]),e._v(" "),t("p",[e._v("Used to configure WinningPoSt Proof related policies")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[Miners.Proof]\n# Whether to enable, optional, boolean type\n# Default is false\n#Enabled = false\n")])])]),t("h3",{attrs:{id:"miners-sealing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#miners-sealing"}},[e._v("#")]),e._v(" [Miners.Sealing]")]),e._v(" "),t("p",[e._v("Used to configure sealing related policies")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[Miners.Sealing]\n# Sealing need how many epochs to achieve，when select deals in sealing, deals start epoch will be\n# required to later than current-epoch + sealing-duration ，optional，integer\n# Default is zero, means no config\n#SealingEpochDuration = 0\n#\n")])])]),t("h3",{attrs:{id:"miners-deal-deprecated"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#miners-deal-deprecated"}},[e._v("#")]),e._v(" [Miners.Deal] "),t("code",[e._v("Deprecated")])]),e._v(" "),t("p",[e._v("Used to configure deal related policies.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[Miners.Deal]\n# Whether to enable, optional, boolean type\n# Default is false\n#Enabled = false\n")])])]),t("h2",{attrs:{id:"a-minimal-working-configuration-file-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-minimal-working-configuration-file-example"}},[e._v("#")]),e._v(" A minimal working configuration file example")]),e._v(" "),t("p",[e._v("Let's have a look at an example of starting a "),t("code",[e._v("venus-sector-manager")]),e._v(" that could supports a "),t("code",[e._v("SP")]),e._v("'s operation,")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[Common]\n[Common.API]\nChain = "/ip4/{api_host}/tcp/{api_port}"\nMessager = "/ip4/{api_host}/tcp/{api_port}"\nMarket = "/ip4/{api_host}/tcp/{api_port}"\nGateway = ["/ip4/{api_host}/tcp/{api_port}"]\nToken = "{some token}"\n\n[[Common.PieceStores]]\nPath = "{store_path}"\n\n[[Common.PersistStores]]\nName = "{store_name1}"\nPath = "{store_path1}"\n\n[[Common.PersistStores]]\nName = "{store_name2}"\nPath = "{store_path2}"\n\n[[Common.PersistStores]]\nName = "{store_name3}"\nPath = "{store_path3}"\n\n[[Common.PersistStores]]\nName = "{store_name4}"\nPath = "{store_path4}"\n\n[[Miners]]\nActor = 10086\n[Miners.Sector]\nInitNumber = 1000\nEnabled = true\nEnableDeals = true\n\n[Miners.Commitment]\n[Miners.Commitment.Pre]\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n[Miners.Commitment.Pre.Batch]\nEnabled = false\n\n[Miners.Commitment.Prove]\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n[Miners.Commitment.Prove.Batch]\nEnabled = true\n\n[Miners.Post]\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\nEnabled = true\n\n[Miners.Proof]\nEnabled = true\n\n')])])]),t("p",[e._v("This activates an instance of "),t("code",[e._v("venus-sector-manager")]),e._v(" that...")]),e._v(" "),t("ul",[t("li",[e._v("With 1 local PieceStore")]),e._v(" "),t("li",[e._v("With 4 local persistent stores")]),e._v(" "),t("li",[e._v("Enables sector allocation, which initial number is 1000")]),e._v(" "),t("li",[e._v("Disables aggregated PreCommit")]),e._v(" "),t("li",[e._v("Enables aggregated ProveCommit")]),e._v(" "),t("li",[e._v("Enables WinningPost module")]),e._v(" "),t("li",[e._v("Enables deal")])])])}),[],!1,null,null,null);n.default=i.exports}}]);